{"version":3,"sources":["Networking/api.js","Networking/constants.js","Context/SessionContext.js","Components/Chat.js","Networking/getAuth.js","Components/Login.js","Components/App.js","index.js"],"names":["source","BASE_URL","CHAT_MESSAGE","USER_JOINED","USER_LEFT","USER_TYPING","message","accessToken","a","axios","post","headers","Authorization","console","log","response","getUsers","get","res","data","getHistory","throwaway","onMessage","onJoin","onLeave","onTyping","onError","close","EventSourcePolyfill","onopen","addEventListener","JSON","parse","username","time","typing","onerror","error","SessionContext","createContext","SessionContextProvider","props","useState","setUsername","setAccessToken","refreshToken","setRefreshToken","messages","setMessages","users","setUsers","requestUsers","requestHistory","token","Provider","value","setInitial","addMessage","push","clearMessages","clearSession","undefined","children","Chat","nav","useNavigate","context","useContext","messageInput","useRef","setTyping","lastTyped","Date","getTime","useEffect","getStream","className","Card","body","style","textAlign","marginBottom","fontWeight","map","key","Body","toLocaleTimeString","length","user","display","flexDirection","Form","Control","as","placeholder","height","ref","onChange","now","sendTyping","Button","onClick","sendMessage","current","i","name","AUTH_URL","login","password","status","register","fireSuccess","Swal","fire","icon","title","text","showConfirmButton","timer","fireError","Login","loginInput","passwordInput","location","useLocation","loginClick","e","loginName","registerClick","InputGroup","size","id","Text","FormControl","type","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a45dc50.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { EventSourcePolyfill } from 'event-source-polyfill';\r\nimport { BASE_URL } from './constants';\r\n\r\nconst CHAT_MESSAGE = 'CHAT_MESSAGE';\r\nconst USER_JOINED = 'USER_JOINED';\r\nconst USER_LEFT = 'USER_LEFT';\r\nconst USER_TYPING = 'USER_TYPING';\r\nlet source;\r\n\r\nexport async function sendMessage(message, accessToken) {\r\n  try {\r\n    await axios.post(\r\n      `${BASE_URL}/message/send`,\r\n      {\r\n        message,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: accessToken,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.log(error.response);\r\n  }\r\n}\r\n\r\nexport async function sendTyping(accessToken) {\r\n  try {\r\n    await axios.post(`${BASE_URL}/message/typing`, null, {\r\n      headers: {\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error.response);\r\n  }\r\n}\r\n\r\nexport async function getUsers(accessToken) {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/message/userList`, {\r\n      headers: {\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function getHistory(accessToken) {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}/message/history`, {\r\n      headers: {\r\n        Authorization: accessToken,\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return [];\r\n  }\r\n}\r\n\r\nconst throwaway = () => {};\r\nexport async function getStream(\r\n  accessToken,\r\n  onMessage = throwaway,\r\n  onJoin = throwaway,\r\n  onLeave = throwaway,\r\n  onTyping = throwaway,\r\n  onError = throwaway\r\n) {\r\n  if (source) {\r\n    source.close();\r\n  } //If stream is up close it\r\n  source = new EventSourcePolyfill(`${BASE_URL}/message/stream`, {\r\n    headers: {\r\n      Authorization: accessToken,\r\n    },\r\n  });\r\n\r\n  source.onopen = () => {\r\n    console.log('EventStream opened');\r\n  };\r\n\r\n  source.addEventListener(USER_JOINED, (message) => {\r\n    message = JSON.parse(message.data);\r\n    onJoin(message.username, message.time);\r\n  });\r\n\r\n  source.addEventListener(USER_LEFT, (message) => {\r\n    message = JSON.parse(message.data);\r\n    console.log(`User ${message.username} left!`);\r\n    onLeave(message.username, message.time);\r\n  });\r\n\r\n  source.addEventListener(CHAT_MESSAGE, (message) => {\r\n    message = JSON.parse(message.data);\r\n    onMessage(message.username, message.message, message.time);\r\n  });\r\n\r\n  source.addEventListener(USER_TYPING, (message) => {\r\n    const typing = JSON.parse(message.data).typing;\r\n    onTyping(typing);\r\n  });\r\n\r\n  source.onerror = (error) => {\r\n    console.log('Error\\n', error);\r\n    source.close();\r\n    onError();\r\n  };\r\n\r\n  return () => {\r\n    source.close();\r\n  };\r\n}\r\n\r\nexport function closeStream() {\r\n  if (source) {\r\n    source.close();\r\n    source = undefined;\r\n    console.log('Closed');\r\n  }\r\n}\r\n","export const BASE_URL = 'http://localHost:8080';\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { getHistory, getUsers } from '../Networking/api';\r\n\r\nexport const SessionContext = createContext('');\r\n\r\nfunction SessionContextProvider(props) {\r\n  const [username, setUsername] = useState();\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [refreshToken, setRefreshToken] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const setInitial = (username, accessToken, refreshToken) => {\r\n    setUsername(username);\r\n    setAccessToken(accessToken);\r\n    setRefreshToken(refreshToken);\r\n  };\r\n\r\n  const clearSession = () => {\r\n    setUsername(undefined);\r\n    setAccessToken(undefined);\r\n    setRefreshToken(undefined);\r\n  };\r\n\r\n  const addMessage = (message) => {\r\n    messages.push(message);\r\n    setMessages([...messages]);\r\n  };\r\n\r\n  const clearMessages = () => {\r\n    setMessages([]);\r\n  };\r\n\r\n  const requestUsers = async () => {\r\n    setUsers([...(await getUsers(accessToken))]);\r\n  };\r\n\r\n  const requestHistory = async (token) => {\r\n    setMessages(await getHistory(token));\r\n    console.log('Got history');\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Provider\r\n      value={{\r\n        username,\r\n        setInitial,\r\n        messages,\r\n        setMessages,\r\n        addMessage,\r\n        users,\r\n        requestUsers,\r\n        clearMessages,\r\n        requestHistory,\r\n        accessToken,\r\n        refreshToken,\r\n        clearSession,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SessionContext.Provider>\r\n  );\r\n}\r\nexport default SessionContextProvider;\r\n","import { useContext, useRef, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SessionContext } from '../Context/SessionContext';\r\nimport { getStream, sendMessage, sendTyping } from '../Networking/api';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport '../styles/chat.css';\r\n\r\nfunction Chat(props) {\r\n  const nav = useNavigate();\r\n  const context = useContext(SessionContext);\r\n  const messageInput = useRef(null);\r\n  const [typing, setTyping] = useState([]);\r\n  let lastTyped = new Date().getTime();\r\n\r\n  const onMessage = (username, message, time) => {\r\n    context.addMessage({ username, message, time });\r\n  };\r\n\r\n  const onLeave = (username, time) => {\r\n    context.addMessage({\r\n      username: 'Server',\r\n      message: `${username} left`,\r\n      time,\r\n    });\r\n    context.requestUsers();\r\n  };\r\n\r\n  const onJoin = (username, time) => {\r\n    context.addMessage({\r\n      username: 'Server',\r\n      message: `${username} joined`,\r\n      time,\r\n    });\r\n    context.requestUsers();\r\n  };\r\n\r\n  const onTyping = (typing) => {\r\n    setTyping(typing);\r\n  };\r\n\r\n  const onError = () => {\r\n    nav('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStream(\r\n      context.accessToken,\r\n      onMessage,\r\n      onJoin,\r\n      onLeave,\r\n      onTyping,\r\n      onError\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const send = () => {\r\n    sendMessage(messageInput.current.value, context.accessToken);\r\n    messageInput.current.value = '';\r\n  };\r\n\r\n  const onChange = () => {\r\n    const now = new Date().getTime();\r\n    if (now - lastTyped > 500) {\r\n      sendTyping(context.accessToken);\r\n      lastTyped = now;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={'chat'}>\r\n      <Card body style={{ textAlign: 'left', marginBottom: '0.5em' }}>\r\n        Logged in as{' '}\r\n        <span style={{ fontWeight: 'bold' }}>{context.username}</span>\r\n      </Card>\r\n      <div className={'content'}>\r\n        <div className={'message-area'}>\r\n          <div className={'history-wrapper'}>\r\n            <div className={'history'}>\r\n              {context.messages.map((message, key) => {\r\n                return (\r\n                  <Card className={'msg'} key={key}>\r\n                    <Card.Body>\r\n                      <span className=\"msg-sender\">{message.username}:</span>\r\n                      <span className={'msg-body'}> {message.message}</span>\r\n                      <span className={'time'}>\r\n                        {new Date(message.time).toLocaleTimeString()}{' '}\r\n                      </span>\r\n                    </Card.Body>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n            <span>\r\n              {typing.length === 0\r\n                ? ''\r\n                : 'Currently Typing: ' + typing.map((user) => `${user} `)}\r\n            </span>\r\n          </div>\r\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Write your message here\"\r\n              style={{ height: '100px' }}\r\n              className={'messagebox'}\r\n              ref={messageInput}\r\n              onChange={onChange}\r\n            />\r\n            <Button className={'send'} onClick={send}>\r\n              Send!\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <ul className={'online list-group'}>\r\n          <span className={'online-label'}>Online</span>\r\n          {context.users.map((user, i) => {\r\n            return (\r\n              <li className={'list-group-item'} key={i}>\r\n                {user.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import axios from 'axios';\r\nimport { BASE_URL } from './constants';\r\n\r\nconst AUTH_URL = `${BASE_URL}/auth`;\r\n\r\nexport async function login(username, password) {\r\n  try {\r\n    const response = await axios.post(`${AUTH_URL}/login/`, {\r\n      username,\r\n      password,\r\n    });\r\n    return {\r\n      status: true,\r\n      message: response.data.message,\r\n      username: response.data.username,\r\n      accessToken: response.data.accessToken,\r\n      refreshToken: response.data.refreshToken,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      status: false,\r\n      message: error.response.data.message || 'something went wrong :(',\r\n    };\r\n  }\r\n}\r\n\r\nexport async function register(username, password) {\r\n  try {\r\n    const response = await axios.post(`${AUTH_URL}/register/`, {\r\n      username,\r\n      password,\r\n    });\r\n    return {\r\n      status: true,\r\n      message: response.data.message,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      status: false,\r\n      message: error.response.data.message || 'something went wrong :(',\r\n    };\r\n  }\r\n}\r\n","import { useRef, useContext, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { closeStream } from '../Networking/api';\r\nimport { login, register } from '../Networking/getAuth';\r\nimport Swal from 'sweetalert2';\r\nimport '../styles/login.css';\r\nimport { SessionContext } from '../Context/SessionContext';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nfunction Login(props) {\r\n  const loginInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n  const context = useContext(SessionContext);\r\n  const nav = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    closeStream();\r\n    context.clearSession();\r\n  }, [location]);\r\n\r\n  const loginClick = async (e) => {\r\n    const loginName = loginInput.current.value;\r\n    const password = passwordInput.current.value;\r\n    const { status, message, username, accessToken, refreshToken } =\r\n      await login(loginName, password);\r\n    status ? fireSuccess(message) : fireError(message);\r\n    if (status) {\r\n      context.setInitial(username, accessToken, refreshToken);\r\n      await context.requestHistory(accessToken);\r\n      nav('/chat');\r\n    }\r\n  };\r\n\r\n  const registerClick = async (e) => {\r\n    const loginName = loginInput.current.value;\r\n    const password = passwordInput.current.value;\r\n    const { status, message } = await register(loginName, password);\r\n    status ? fireSuccess(message) : fireError(message);\r\n  };\r\n\r\n  return (\r\n    <div className={'login'}>\r\n      <span className={'title card-title'}>Chat Room!</span>\r\n      <InputGroup\r\n        size=\"lg\"\r\n        id=\"inputGroup-sizing-sm\"\r\n        className={'mb-3 name-input login-elm'}\r\n        placeholder={'Enter Login Name'}\r\n      >\r\n        <InputGroup.Text>Username:</InputGroup.Text>\r\n        <FormControl\r\n          aria-label=\"Small\"\r\n          aria-describedby=\"inputGroup-sizing-sm\"\r\n          ref={loginInput}\r\n        />\r\n      </InputGroup>\r\n      <InputGroup\r\n        size=\"lg\"\r\n        id=\"inputGroup-sizing-sm\"\r\n        className={'mb-3 name-input login-elm'}\r\n        placeholder={'Enter Login Name'}\r\n      >\r\n        <InputGroup.Text>Password:</InputGroup.Text>\r\n        <FormControl\r\n          aria-label=\"Small\"\r\n          aria-describedby=\"inputGroup-sizing-sm\"\r\n          ref={passwordInput}\r\n          type=\"password\"\r\n        />\r\n      </InputGroup>\r\n      <div className={'btn-container login-elm'}>\r\n        <Button id={'login-btn'} size=\"lg\" onClick={loginClick}>\r\n          Login\r\n        </Button>\r\n        <Button id={'register-btn'} size=\"lg\" onClick={registerClick}>\r\n          Register\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fireSuccess(message) {\r\n  Swal.fire({\r\n    icon: 'success',\r\n    title: 'Hooray!',\r\n    text: message,\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n  });\r\n}\r\n\r\nfunction fireError(message) {\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops!',\r\n    text: message,\r\n    showConfirmButton: false,\r\n    timer: 1500,\r\n  });\r\n}\r\nexport default Login;\r\n","import { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport SessionContextProvider from '../Context/SessionContext';\r\nimport Chat from './Chat';\r\nimport Login from './Login';\r\n\r\nfunction App() {\r\n  return (\r\n    <SessionContextProvider>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path={'/'} element={<Login />} />\r\n          <Route path={'/chat'} element={<Chat />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </SessionContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './Components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}